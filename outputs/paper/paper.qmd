---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - Myra Li
thanks: "Code and data are available at: LINK."
date: "`r Sys.time()`"
date-format: "D MMMM YYYY"
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false
library(tidyverse)
```


# Introduction



# Data {#sec-data}



```{r setup, include=FALSE}

knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(fig.width=6.5, fig.height=2.8) 
# loading in relevant libraries
library(cowplot)
library(tidyverse)
library(dplyr, warn.conflicts = FALSE)
library(tidyr)
library(data.table)
library(lubridate)
library(haven)
library(ggplot2)
library(scales)
### Input data ###
hot_to_go <- read.csv(here::here("outputs/data/Fig1_hot_to_go.csv"))

```



```{r}
Fhot_to_go <- ggplot(data = hot_to_go, aes(x = Hot_To_Go_Cups, y = Percentage, fill = as.factor(Year))) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  labs(x = "Disposable Hot To-Go Cups, such as coffee cups", y = "Percentage (%)", title = "Usage Patterns of Disposable Hot To-Go Cups in 2018 and 2019") +
  scale_fill_manual(values = c("steelblue", "darkorange"), name = "Year", labels = c("2018", "2019"))

Fhot_to_go
```
```{r}
# choose disposable hot to-go cups and count frequency
frequency_table_hot <- single_use_data_2019 %>%
  group_by(`Hot.To.Go.Cups`) %>%
  summarise(Freq = n()) %>%
  as.data.frame()

# Calculate the total count
total_count <- sum(frequency_table_hot$Freq)

# Add a new column to calculate the percentage for each category
frequency_table_hot$Percentage <- (frequency_table_hot$Freq / total_count) * 100
frequency_table_hot
# Plot the bar chart
hot_to_go_2019 <- ggplot(data = frequency_table_hot, aes(x = `Hot.To.Go.Cups`, y = Percentage)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  theme_minimal() +
  labs(x = "Disposable Hot To-Go Cups, such as coffee cups", y = "Percentage (%)", title = "Usage Patterns of Disposable Hot To-Go Cups in 2019") 

hot_to_go_2019
```
```{r}
# Calculate frequency and percentage for 2018 data
frequency_table_hot_2018 <- single_use_data %>%
  group_by(`Hot To-Go Cups`) %>%
  summarise(Freq = n()) %>%
  mutate(Year = 2018) %>%
  as.data.frame()

total_count_2018 <- sum(frequency_table_hot_2018$Freq)
frequency_table_hot_2018$Percentage <- (frequency_table_hot_2018$Freq / total_count_2018) * 100

# Calculate frequency and percentage for 2019 data
frequency_table_hot_2019 <- single_use_data_2019 %>%
  group_by(`Hot.To.Go.Cups`) %>%
  summarise(Freq = n()) %>%
  mutate(Year = 2019) %>%
  as.data.frame()

total_count_2019 <- sum(frequency_table_hot_2019$Freq)
frequency_table_hot_2019$Percentage <- (frequency_table_hot_2019$Freq / total_count_2019) * 100

# Rename columns to be consistent
colnames(frequency_table_hot_2018) <- c("Hot_To_Go_Cups", "Freq", "Year", "Percentage")
colnames(frequency_table_hot_2019) <- c("Hot_To_Go_Cups", "Freq", "Year", "Percentage")

# Combine 2018 and 2019 data into one data frame
combined_data <- dplyr::bind_rows(frequency_table_hot_2018, frequency_table_hot_2019)

combined_data
```

```{r}
# choose disposable hot to-go cups and count frequency
frequency_table_cold <- single_use_data %>%
  group_by(`Cold To-Go Cups`) %>%
  summarise(Freq = n()) %>%
  as.data.frame()

# Plot the bar chart
cold_to_go <- ggplot(data = frequency_table_cold, aes(x = `Cold To-Go Cups`, y = Freq)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  theme_minimal() +
  labs(x = "Disposable Cold To-Go Cups, such as coffee cups", y = "Frequency", title = "Usage Patterns of Disposable Cold To-Go Cups")

cold_to_go
```


```{r}
# choose disposable hot to-go cups and count frequency
frequency_table_plastic <- single_use_data %>%
  group_by(`Plastic Bags`) %>%
  summarise(Freq = n()) %>%
  as.data.frame()

# Plot the bar chart
plastic_bags <- ggplot(data = frequency_table_plastic, aes(x = `Plastic Bags`, y = Freq)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  theme_minimal() +
  labs(x = "Plastic Bags", y = "Frequency", title = "Usage Patterns of Plastic Bags")

plastic_bags
```
```{r}
# choose paper bags and count frequency
frequency_table_paper_bags <- single_use_data %>%
  group_by(`Paper Bags`) %>%
  summarise(Freq = n()) %>%
  as.data.frame()

# Plot the bar chart
paper_bags <- ggplot(data = frequency_table_paper_bags, aes(x = `Paper Bags`, y = Freq)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  theme_minimal() +
  labs(x = "Paper Bags", y = "Frequency", title = "Usage Patterns of Paper Bags")

paper_bags
```
```{r}
# choose black plastic containers and count frequency
frequency_black_plastic_containers <- single_use_data %>%
  group_by(`Black Plastic Containers`) %>%
  summarise(Freq = n()) %>%
  as.data.frame()

# Plot the bar chart
black_plastic_containers <- ggplot(data = frequency_black_plastic_containers, aes(x = `Black Plastic Containers`, y = Freq)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  theme_minimal() +
  labs(x = "Black Plastic Containers", y = "Frequency", title = "Usage Patterns of Black Plastic Containers")

black_plastic_containers
```

```{r}
# choose other plastic containers and count frequency
frequency_other_plastic_containers <- single_use_data %>%
  group_by(`Other Colour Plastic Containers`) %>%
  summarise(Freq = n()) %>%
  as.data.frame()

# Plot the bar chart
other_plastic_containers <- ggplot(data = frequency_other_plastic_containers, aes(x = `Other Colour Plastic Containers`, y = Freq)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  theme_minimal() +
  labs(x = "Other Colour Plastic Containers", y = "Frequency", title = "Usage Patterns of Other Colour Plastic Containers")

other_plastic_containers
```

```{r}
# choose disposable cutlery and count frequency
frequency_disposable_cutlery <- single_use_data %>%
  group_by(`Disposable Cutlery`) %>%
  summarise(Freq = n()) %>%
  as.data.frame()

# Plot the bar chart
disposable_cutlery <- ggplot(data = frequency_disposable_cutlery , aes(x = `Disposable Cutlery`, y = Freq)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  theme_minimal() +
  labs(x = "Disposable Cutlery", y = "Frequency", title = "Usage Patterns of Disposable Cutlery")

disposable_cutlery
```
```{r}
# choose plastic straws and count frequency
frequency_plastic_straws <- single_use_data %>%
  group_by(`Plastic Straws`) %>%
  summarise(Freq = n()) %>%
  as.data.frame()

# Plot the bar chart
plastic_straws <- ggplot(data = frequency_plastic_straws , aes(x = `Plastic Straws`, y = Freq)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  theme_minimal() +
  labs(x = "Plastic Straws", y = "Frequency", title = "Usage Patterns of Plastic Straws")

plastic_straws
```

```{r}
# choose styrofoam containerss and count frequency
frequency_styrofoam_containers <- single_use_data %>%
  group_by(`Styrofoam Containers`) %>%
  summarise(Freq = n()) %>%
  as.data.frame()

# Plot the bar chart
styrofoam_containers <- ggplot(data = frequency_styrofoam_containers , aes(x = `Styrofoam Containers`, y = Freq)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  theme_minimal() +
  labs(x = "Styrofoam Containers", y = "Frequency", title = "Usage Patterns of Styrofoam Containers")

styrofoam_containers
```

# Model

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.


# Results

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
library(rstanarm)
first_model <-
  readRDS(file = here::here("outputs/models/first_model.rds"))
```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false
modelsummary::modelsummary(
  list(
    "First model" = first_model
  ),
  statistic = "mad",
  fmt = 2
)
```




# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]
pp_check(first_model) +
  theme_classic() +
  theme(legend.position = "bottom")
posterior_vs_prior(first_model) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  coord_flip()
```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2
plot(first_model, "trace")
plot(first_model, "rhat")
```



\newpage


# References

